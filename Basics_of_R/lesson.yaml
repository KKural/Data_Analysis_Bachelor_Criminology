# ========== 1. META BLOCK ==========
- Class: meta
  Course: "Data Analysis - Bachelor Criminology"
  Lesson: "Basics of R"
  Author: "Kural K."
  Type: Standard
  Organization: "UGent"
  Version: "2.5"

# ========== 2. WELCOME MESSAGE ==========
- Class: text
  Output: |
    Welcome to the **Basics of R** lesson!
    You will work with synthetic criminology datasets to practise the fundamentals of R.
    When you are ready, press Enter to begin.

# ========== 3. QUESTIONS ==========
- Class: cmd_question
  Output: Q1  What are the column names of `df_crime_stats_ghent`?
  CorrectAnswer: colnames(df_crime_stats_ghent)
  AnswerTests: omnitest(correctExpr = "colnames(df_crime_stats_ghent)")
  Hint: "Use colnames() on the data frame you just loaded."
  Feedback: |
    Correct! Those are all the columns.
    Try `colnames(df_crime_stats_ghent)` if you need a reminder.

- Class: cmd_question
  Output: Q2  What is the structure of `df_crime_stats_ghent`?
  CorrectAnswer: str(df_crime_stats_ghent)
  AnswerTests: omnitest(correctExpr = "str(df_crime_stats_ghent)")
  Hint: "Use str() to display the structure."
  Feedback: |
    Well done! That shows the structure.
    Use `str(df_crime_stats_ghent)` to review it again.

- Class: cmd_question
  Output: Q3  How many rows are in `df_crime_stats_ghent`? (Use a function, not a hard-coded number.)
  CorrectAnswer: nrow(df_crime_stats_ghent)
  AnswerTests: omnitest(correctExpr = "nrow(df_crime_stats_ghent)")
  Hint: "Try nrow() on the data frame."
  Feedback: |
    Good job!
    `nrow(df_crime_stats_ghent)` returns the number of rows.

- Class: cmd_question
  Output: Q4  What are the dimensions of `df_crime_stats_ghent`?
  CorrectAnswer: dim(df_crime_stats_ghent)
  AnswerTests: omnitest(correctExpr = "dim(df_crime_stats_ghent)")
  Hint: "Use dim() to get both rows and columns."
  Feedback: |
    Excellent!
    `dim(df_crime_stats_ghent)` shows rows and columns.

- Class: cmd_question
  Output: Q5  What are the column names of `crime_stats_ghent`?
  CorrectAnswer: colnames(crime_stats_ghent)
  AnswerTests: omnitest(correctExpr = "colnames(crime_stats_ghent)")
  Hint: "Use colnames() on the data set."
  Feedback: |
    Correct!
    `colnames(crime_stats_ghent)` lists the column names.

- Class: cmd_question
  Output: Q6  How many rows are in `neighborhood_index`? (Use a function, not a hard-coded number.)
  CorrectAnswer: nrow(neighborhood_index)
  AnswerTests: omnitest(correctExpr = "nrow(neighborhood_index)")
  Hint: "Try nrow() on the data frame."
  Feedback: |
    Nice work!
    `nrow(neighborhood_index)` gives the row count.

- Class: mult_question
  Output: Q7  The variable `clearance_rate` in `police_effort_index` is measured on which scale?
  AnswerChoices: Nominal;Ordinal;Ratio
  CorrectAnswer: Ratio
  AnswerTests: omnitest(correctVal = "Ratio")
  Hint: "Can you subtract values and say one is twice another?"
  Feedback: |
    Correct! Because the variable has a true zero and meaningful ratios.

- Class: cmd_question
  Output: Q8  Extract the `district` column from `crime_stats_ghent`.
  CorrectAnswer: crime_stats_ghent$district
  AnswerTests: omnitest(correctExpr = "crime_stats_ghent$district")
  Hint: "Use $ to extract a column."
  Feedback: |
    Well done!
    `crime_stats_ghent$district` extracts that column.

- Class: cmd_question
  Output: Q9  Create `low_safety` as all rows in `fear_of_crime_survey` where `feel_safe_night < 3`; then print the first 6 rows.
  CorrectAnswer: low_safety <- fear_of_crime_survey %>% filter(feel_safe_night < 3); head(low_safety)
  AnswerTests: is.data.frame(last_value) && nrow(last_value) > 0
  Hint: "Filter with %>% then assign and print with head()."
  Feedback: |
    Nice job!
    Remember to assign first, then print the result.

- Class: mult_question
  Output: Q10  The variable `poverty_rate` in `neighborhood_index` is measured on which scale?
  AnswerChoices: Nominal;Ordinal;Ratio
  CorrectAnswer: Ratio
  AnswerTests: omnitest(correctVal = "Ratio")
  Hint: "Is there a true zero and meaningful ratios?"
  Feedback: |
    Correct!
    `poverty_rate` is a ratio variable.

- Class: cmd_question
  Output: Q11  What is the mean of `violent_crimes` in `crime_stats_ghent`?
  CorrectAnswer: mean(crime_stats_ghent$violent_crimes)
  AnswerTests: omnitest(correctExpr = "mean(crime_stats_ghent$violent_crimes)")
  Hint: "Use mean() on the column."
  Feedback: |
    Correct!
    `mean(crime_stats_ghent$violent_crimes)` returns the mean.

- Class: cmd_question
  Output: Q12  Show the first 6 rows of `crime_journal_notes`.
  CorrectAnswer: head(crime_journal_notes)
  AnswerTests: omnitest(correctExpr = "head(crime_journal_notes)")
  Hint: "Use head() on the data set."
  Feedback: |
    Good work!
    `head(crime_journal_notes)` shows the first rows.

- Class: cmd_question
  Output: Q13  What is your current working directory?
  CorrectAnswer: getwd()
  AnswerTests: omnitest(correctExpr = "getwd()")
  Hint: "Use getwd() to check."
  Feedback: |
    That's it!
    `getwd()` returns the working directory.

- Class: cmd_question
  Output: Q14  What is 5 + 7?
  CorrectAnswer: 12
  AnswerTests: omnitest(correctVal = 12)
  Hint: "Type the result of 5 + 7."
  Feedback: |
    Correct!
    The sum is 12.

- Class: cmd_question
  Output: Q15  Assign the value 20 to a variable called `y`.
  CorrectAnswer: y <- 20
  AnswerTests: omnitest(correctExpr = "y <- 20")
  Hint: "Use <- to assign values in R."
  Feedback: |
    Good!
    `y <- 20` stores 20 in y.

- Class: cmd_question
  Output: Q16  Create a vector `nums` with the numbers 4, 5, 6.
  CorrectAnswer: nums <- c(4, 5, 6)
  AnswerTests: omnitest(correctExpr = "nums <- c(4, 5, 6)")
  Hint: "Use c() to combine numbers."
  Feedback: |
    Well done!
    `nums <- c(4, 5, 6)` creates the vector.

- Class: cmd_question
  Output: Q17  What is the class of the value 2.71?
  CorrectAnswer: class(2.71)
  AnswerTests: omnitest(correctExpr = "class(2.71)")
  Hint: "Use class() to check the type."
  Feedback: |
    Correct!
    `class(2.71)` shows it is numeric.

- Class: cmd_question
  Output: Q18  What is the class of the value 'swirl'?
  CorrectAnswer: class('swirl')
  AnswerTests: omnitest(correctExpr = "class('swirl')")
  Hint: "Use class() on a string."
  Feedback: |
    Good!
    `class('swirl')` shows it is character.

- Class: cmd_question
  Output: Q19  What is the class of the value FALSE?
  CorrectAnswer: class(FALSE)
  AnswerTests: omnitest(correctExpr = "class(FALSE)")
  Hint: "Use class() on a logical value."
  Feedback: |
    Well done!
    `class(FALSE)` shows it is logical.

- Class: cmd_question
  Output: Q20  (Bonus) Display the built-in `letters` vector.
  CorrectAnswer: letters
  AnswerTests: omnitest(correctExpr = "letters")
  Hint: "Just type letters."
  Feedback: |
    Correct! That prints the alphabet.

# ========== 4. COMPLETION MESSAGE ==========
- Class: text
  Output: |
    Congratulations!  
    You have successfully completed the *Basics of R* lesson.
    Keep practising, and happy coding!
