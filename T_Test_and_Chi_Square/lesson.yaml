- Class: meta
  Course: Data Analysis - Bachelor criminolgy
  Lesson: T_Test_and_Chi_Square
  Author: Kural K.
  Type: Standard
  Organization: UGent
  Version: 2.5

- Class: text
  Output: |
    Welcome to the **T-Test and Chi-Square** lesson!
    You’ll work with synthetic criminology datasets to practice t-tests and chi-square tests in R.

# Chapter 1: Data Preparation
- Class: cmd_question
  Output: "**Q1** : Load the R package `crimsyndata` using the library function. This package contains several datasets that you will use in the following exercises."
  CorrectAnswer: library(crimsyndata)
  AnswerTests: omnitest(correctExpr = "library(crimsyndata)")
  Hint: Use `library(crimsyndata)` to load the package and access its datasets.
  Feedback: |
    ✔️ Excellent! The package is now loaded and you can access the datasets.
    ❌ Remember to use: library(crimsyndata)

- Class: cmd_question
  Output: "**Q2** : What are the column names of `crime_stats_ghent`?"
  CorrectAnswer: colnames(crime_stats_ghent)
  AnswerTests: omnitest(correctExpr = "colnames(crime_stats_ghent)")
  Hint: Use `colnames()` on the data frame you just loaded.
  Feedback: |
    ✔️ Correct! You have listed all the column names. Great job!
    ❌ Try using colnames(crime_stats_ghent) to see the column names.

- Class: cmd_question
  Output: "**Q3** : What is the structure of `crime_stats_ghent`?"
  CorrectAnswer: str(crime_stats_ghent)
  AnswerTests: omnitest(correctExpr = "str(crime_stats_ghent)")
  Hint: Use `str()` to see structure.
  Feedback: |
    ✔️ Well done! You have displayed the structure of the data frame.
    ❌ Use str(crime_stats_ghent) to see the structure of the data frame.

- Class: cmd_question
  Output: "**Q4** : How many rows are in `crime_stats_ghent`? (Use a function, not a hard-coded number.)"
  CorrectAnswer: nrow(crime_stats_ghent)
  AnswerTests: omnitest(correctExpr = "nrow(crime_stats_ghent)")
  Hint: Try `nrow()` on the data frame.
  Feedback: |
    ✔️ Good! You have found the number of rows in the data frame.
    ❌ Use nrow(crime_stats_ghent) to get the number of rows.

- Class: cmd_question
  Output: "**Q5** : What are the dimensions of `crime_stats_ghent`?"
  CorrectAnswer: dim(crime_stats_ghent)
  AnswerTests: omnitest(correctExpr = "dim(crime_stats_ghent)")
  Hint: Use `dim()` to get both rows and columns.
  Feedback: |
    ✔️ Excellent! You have displayed both the number of rows and columns.
    ❌ Use dim(crime_stats_ghent) to get the dimensions.

# Chapter 2: T-Test
- Class: cmd_question
  Output: "**Q6** : Perform a t-test comparing `fear_score` by `neighborhood` in `fear_of_crime_survey`."
  CorrectAnswer: t.test(fear_score ~ neighborhood, data = fear_of_crime_survey)
  AnswerTests: omnitest(correctExpr = "t.test(fear_score ~ neighborhood, data = fear_of_crime_survey)")
  Hint: Use the formula interface inside `t.test()`.
  Feedback: |
    ✔️ t-test done! You performed the t-test correctly.
    ❌ Check the argument order and data frame.

- Class: cmd_question
  Output: "**Q7** : What is the p-value of the t-test you just performed? (Assign the t-test to `ttest_result` and extract the p-value.)"
  CorrectAnswer: ttest_result <- t.test(fear_score ~ neighborhood, data = fear_of_crime_survey); ttest_result$p.value
  AnswerTests: omnitest(correctExpr = "ttest_result <- t.test(fear_score ~ neighborhood, data = fear_of_crime_survey); ttest_result$p.value")
  Hint: Assign the t-test to `ttest_result` and use `$p.value`.
  Feedback: |
    ✔️ Correct! You extracted the p-value from the t-test result.
    ❌ Make sure you assign and extract the p-value.

# Chapter 3: Chi-Square Test
- Class: cmd_question
  Output: "**Q8** : Create a contingency table of `district` × `crime_type` in `crime_stats_ghent` and perform a chi-square test."
  CorrectAnswer: chisq.test(table(crime_stats_ghent$district, crime_stats_ghent$crime_type))
  AnswerTests: omnitest(correctExpr = "chisq.test(table(crime_stats_ghent$district, crime_stats_ghent$crime_type))")
  Hint: Wrap `table()` inside `chisq.test()`.
  Feedback: |
    ✔️ Chi-square test complete! You performed the test correctly.
    ❌ Make sure you pass a *table* to `chisq.test()`.

- Class: cmd_question
  Output: "**Q9** : What is the p-value of the chi-square test you just performed? (Assign the test to `chisq_result` and extract the p-value.)"
  CorrectAnswer: chisq_result <- chisq.test(table(crime_stats_ghent$district, crime_stats_ghent$crime_type)); chisq_result$p.value
  AnswerTests: omnitest(correctExpr = "chisq_result <- chisq.test(table(crime_stats_ghent$district, crime_stats_ghent$crime_type)); chisq_result$p.value")
  Hint: Assign the chi-square test to `chisq_result` and use `$p.value`.
  Feedback: |
    ✔️ Correct! You extracted the p-value from the chi-square test result.
    ❌ Make sure you assign and extract the p-value.

# Chapter 4: Conceptual
- Class: mult_question
  Output: "**Q10** : Which R function carries out a **chi-square** test?"
  AnswerChoices: chisq.test(); t.test(); cor(); mean()
  CorrectAnswer: chisq.test()
  AnswerTests: omnitest(correctVal = "chisq.test()")
  Hint: It starts with *chisq*.
  Feedback: |
    ✔️ Correct. The function is `chisq.test()`.
    ❌ Recall that chi-square starts with *chisq*.